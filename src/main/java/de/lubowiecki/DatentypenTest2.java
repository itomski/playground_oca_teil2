package de.lubowiecki;

import java.util.Arrays;

public class DatentypenTest2 {

    public static void main(String[] args) {

        int i = 10;
        double d = 15.2;

        // Bei mathemantischen Operationen promovieren kleiner Operanden zu Operanden höheren Typs
        // Beide typen müssen auf den gleichen gebracht werden. Kleiner steigen zum größeren auf
        double sum = i + d;

        //float f = 15.0; // Error: ohne f sind Fließkommazahlen automatisch vom Typ double
        float f = 15.0f;

        // ohne l muss der Zahlen-Literal eine gültige int-Zahl sein
        long l1 = 1_000_000_000; // 100 ist int und promoviert zu long
        long l2 = 1_000_000_000_000l; // 100 ist jetzt ein long

        String s = "A"; // Komplexer Datentyp - Muss mit ".." geschrieben werden
        char c = 'A'; // primitiver Datentyp - Muss mit 'A' geschrieben werden - Enthält NUR 1 Zeichen

        s += c; // s = s + c; // Verkettung
        //c += s; // Error: Geht nicht! Verkettung produziert einen String. String ist KEIN char

        System.out.println();

        int x = 0b100101;
        System.out.println(x);
        x = 0xab73c;
        System.out.println(x);
        x = 0576;
        System.out.println(x);
        x = 576;
        System.out.println(x);

        System.out.println();

        // Ausgabe in anderen Zahlensystemen
        // Wrapper:
        // Byte, Short, Integer, Float, Double
        // Character, Boolean
        System.out.println(Integer.BYTES);
        System.out.println(Integer.MAX_VALUE);
        System.out.println(Integer.MIN_VALUE);
        System.out.println(Integer.toBinaryString(576));
        System.out.println(Integer.toHexString(576));
        System.out.println(Integer.toOctalString(576));

        // Schreibe eine Klasse (ZahlenUtil), die Methoden(hex(...), bin(...), oct(...)) enthält,
        // die Zahlen entgegen nehmen und diese in ausgewählten Zahlensystemen anzeigen

        int[] intArr = new int[100];

        System.out.println(Arrays.toString(intArr));
        //Arrays arr = new Arrays(); // Error: Arrays hat einen privaten Konstruktor
        Arrays.fill(intArr, 100);
        System.out.println(Arrays.toString(intArr));

        // Hilfsklasse für Array: Arrays
        // Hilfsklasse für List & Co: Collections
    }
}
