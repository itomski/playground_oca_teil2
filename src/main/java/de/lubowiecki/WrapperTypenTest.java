package de.lubowiecki;

import java.util.ArrayList;
import java.util.List;

public class WrapperTypenTest {

    public static void main(String[] args) {

        // byte -> Byte
        // short -> Short
        // int -> Integer
        // long -> Long
        // float -> Float
        // double -> Double
        // char -> Character
        // boolean -> Boolean

        List<Integer> zahlen = new ArrayList<>();
        zahlen.add(10); // primitive 10 wird über Autoboxing zu komplex 10
        int i = zahlen.get(0); // komplex 10 wird über Auto-Unboxing zu primitiv 10
        Integer j = i; // Autoboxing
        byte b = j.byteValue(); // Wandelt den komplexen Integer in einen primitiven byte um

        Byte b2 = Byte.valueOf("10"); // valueOf produziert immer einen komplexen Datentyp

        // Alle statischen Methoden werden auf der Klasse ausgeführt
        // Sie ignorieren den Inhalt eines Objekts und verarbeiten lediglich die Parameter
        String str1 = j.toOctalString(15); // nicht ganz richtig...
        String str2 = Integer.toOctalString(15); // richtig

        System.out.println(Integer.BYTES);
        System.out.println(Double.BYTES);

    }
}
